# Generated by Django 2.2.3 on 2019-07-22 18:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('blogID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('blogTitle', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('commentID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('commentBody', models.CharField(max_length=200)),
                ('isReply', models.BooleanField()),
                ('likes', models.IntegerField()),
                ('dislikes', models.IntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('postTitle', models.CharField(max_length=40)),
                ('text', models.TextField(max_length=2000)),
                ('likes', models.IntegerField()),
                ('dislikes', models.IntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('replyID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('replyBody', models.CharField(max_length=200)),
                ('isReply', models.BooleanField()),
                ('likes', models.IntegerField()),
                ('dislikes', models.IntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tagID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('tag', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('firstName', models.CharField(max_length=15)),
                ('lastName', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=30)),
                ('aboutMe', models.TextField(max_length=200)),
                ('isActive', models.BooleanField()),
                ('isPrivate', models.BooleanField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User_Likes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField()),
                ('postID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Post')),
                ('userID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.User')),
            ],
        ),
        migrations.CreateModel(
            name='User_Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Comment')),
                ('userID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.User')),
            ],
        ),
        migrations.CreateModel(
            name='Tag_Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Post')),
                ('tagID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='CommentReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Comment')),
                ('replyID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Reply')),
            ],
        ),
        migrations.CreateModel(
            name='Comment_Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Comment')),
                ('postID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Post')),
            ],
        ),
        migrations.CreateModel(
            name='Blog_Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blogID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Blog')),
                ('postID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Post')),
            ],
        ),
        migrations.CreateModel(
            name='UserBlog',
            fields=[
                ('blog', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='blog.Blog')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.User')),
            ],
        ),
    ]
